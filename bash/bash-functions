function tfind {
    find . -name "*.$1"
}

function tgrep {
   egrep -R --include="*.$1" "$2" .
}

function tchecksum {
    find . -name "*.$1" -printf "%s-%C@" | md5sum | awk '{print $1;}'
}

function run_on_change {
    value=""
    ftype=$1
    command=$2
    args="$3"
    while [ -1 ]; do
          new_value=`tchecksum $ftype`
    	  if [[ $new_value != $value ]]; then
	      command $command $args
	  fi
	  value=$new_value
    done
}

function sudo_str {
    sudo bash -c "$1"
}

function get_local_vhosts {
    for vhost in `get_vhosts`; do
	if [[ $vhost =~ (.*)\.local$ ]]; then
	    echo ${BASH_REMATCH[1]}
	fi
    done
}

function get_vhosts {
   path="/etc/apache2/sites-enabled"
    for file in `ls $path`; do 
      data=`fgrep -e 'ServerName' $path/$file | awk '{print $2;}'`
      if [[ -n "$data" ]]; then 
	  echo "$data"
      fi
    done
}

function get_mac_address {
   ifconfig  | fgrep "Link" | egrep -v "lo|inet6"  | awk '{print $5;}'
}

function get_ip_address {
   ifconfig | grep "inet addr" | grep -v "127.0.0.1" | awk '{print $2;}' | cut -d : -f 2
}

function git-svn-transplant-to {
    current_branch=`git branch | grep "*" | awk '{print $2}'`
    git checkout $1 && git merge $current_branch && git svn dcommit && git checkout $current_branch
}

function git-svn-create-branch {
    svnremote=`git config --list | grep "svn-remote.svn.url" | cut -d '=' -f 2`
    branches=`git config --list | grep branches | sed -s 's/.*branches=//' | sed -s 's/*:.*//'`
    current=`git svn info | grep "URL: " | cut -d ' ' -f 2`
    destination=$svnremote/$branches$1
    if [ "$2" == "-n" ]; then
	echo " ** Dry run only ** "
	echo "svn cp $current $destination -m \"creating branch\""
	echo "git svn fetch"
	echo "git branch --track svn-$1 $1"
    else
	svn cp $current $destination -m "creating branch"
	git svn fetch
	git branch --track svn-$1 $1
    fi
       
    echo "Created branch $1 at $destination (locally svn-$1)"
}

function git-svn-prune-branches {
    svnremote=`git config --list | grep "svn-remote.svn.url" | cut -d '=' -f 2`
    branches=`git config --list | grep branches | sed -s 's/.*branches=//' | sed -s 's/*:.*//'`

    remote_branches=" `svn ls $svnremote/$branches | sed 's/\/$//'` "
    local_branches=`git branch -r | cut -d ' ' -f 3 | grep -v '^trunk$' | grep -v 'tags/'`

    for branch in $local_branches; do
	if [[ `expr $remote_branches : $branch` > 0 ]] ; then
	    echo "Found $branch"
	fi
    done

    #echo $local_branches
    #echo "***"
    #echo $remote_branches
}